<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://elifcansuyildiz.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://elifcansuyildiz.github.io/" rel="alternate" type="text/html" /><updated>2024-11-03T23:53:16+00:00</updated><id>https://elifcansuyildiz.github.io/feed.xml</id><title type="html">Elif Cansu YILDIZ</title><subtitle>Machine Learning Engineer</subtitle><entry><title type="html">Playing with HSV Color Space</title><link href="https://elifcansuyildiz.github.io/blog/PlayingWithHSVcolorSpace" rel="alternate" type="text/html" title="Playing with HSV Color Space" /><published>2022-07-20T00:00:00+00:00</published><updated>2022-07-20T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/PlayingWithHSVcolorSpace</id><author><name></name></author><summary type="html"><![CDATA[This notebook covers how to mask color and change to another color using HSV color space which is an alternative color space to RGB where we can modify the colors by just shifting the hue of the image.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/PlayingWithHSVcolorSpace.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/PlayingWithHSVcolorSpace.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Image Warping</title><link href="https://elifcansuyildiz.github.io/blog/ImageWarping" rel="alternate" type="text/html" title="Image Warping" /><published>2022-06-16T00:00:00+00:00</published><updated>2022-06-16T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/ImageWarping</id><author><name></name></author><summary type="html"><![CDATA[Implementations of various image warping methods including fish eye, swirl, waves, cylinder anamorphosis, radial blur, bilinear warping, and perspective mapping effects.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/imageWarping.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/imageWarping.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Edge Detection</title><link href="https://elifcansuyildiz.github.io/blog/EdgeDetection" rel="alternate" type="text/html" title="Edge Detection" /><published>2021-12-09T00:00:00+00:00</published><updated>2021-12-09T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/EdgeDetection</id><author><name></name></author><summary type="html"><![CDATA[Detecting edges using derivative of Gaussian kernels, and with Canny edge detector, taking the distance transform, hough transform, and applying mean shift algorithms to detect the edges more consistently.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/EdgeDetection.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/EdgeDetection.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Basic Computer Vision Tasks</title><link href="https://elifcansuyildiz.github.io/blog/BasicCVTasks" rel="alternate" type="text/html" title="Basic Computer Vision Tasks" /><published>2021-12-08T00:00:00+00:00</published><updated>2021-12-08T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/BasicCVTasks</id><author><name></name></author><summary type="html"><![CDATA[This notebook consists of calculation of integral image, mean grey value of the image, 2D filtering, generating a noisy image, denoising, separability of filters, Fourier transform on the images, and template matching.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/basicCVtasks.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/basicCVtasks.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Support Vector Machines</title><link href="https://elifcansuyildiz.github.io/blog/SVM" rel="alternate" type="text/html" title="Support Vector Machines" /><published>2021-12-05T00:00:00+00:00</published><updated>2021-12-05T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/SVM</id><author><name></name></author><summary type="html"><![CDATA[Usage of SVM with different kernels on various datasets. SVM with linear kernels, polynomial kernels, RBF kernels, sigmoid kernels are run on datasets and results are shown.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/svm-img.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/svm-img.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Segmentation with KMeans</title><link href="https://elifcansuyildiz.github.io/blog/SegmentationKmeans" rel="alternate" type="text/html" title="Segmentation with KMeans" /><published>2021-12-04T00:00:00+00:00</published><updated>2021-12-04T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/SegmentationKmeans</id><author><name></name></author><summary type="html"><![CDATA[Numpy implementation of k-Means on image data. k-Means algorithm has been run on an intensity image, RGB image, and properly scaled image position on an intensity image.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/Kmeans-Segmentation.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/Kmeans-Segmentation.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Numerical Optimization</title><link href="https://elifcansuyildiz.github.io/blog/Numerical_Optimization" rel="alternate" type="text/html" title="Numerical Optimization" /><published>2021-12-03T00:00:00+00:00</published><updated>2021-12-03T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/Numerical_Optimization</id><author><name></name></author><summary type="html"><![CDATA[Numpy implementation of Gradient Descent, Gradient Descent with Line Searches, Gradient Descent using Conjugate Gradients, Newton's Method.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/num-optim-img.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/num-optim-img.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hopfield Networks</title><link href="https://elifcansuyildiz.github.io/blog/HopfieldNetworks" rel="alternate" type="text/html" title="Hopfield Networks" /><published>2021-12-02T00:00:00+00:00</published><updated>2021-12-02T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/HopfieldNetworks</id><author><name></name></author><category term="Hopfield Networks" /><category term="Python" /><summary type="html"><![CDATA[Numpy implementation of Hopfield Networks.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/hopfield-net-img.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/hopfield-net-img.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Principal Component Analysis</title><link href="https://elifcansuyildiz.github.io/blog/PCA" rel="alternate" type="text/html" title="Principal Component Analysis" /><published>2021-12-01T00:00:00+00:00</published><updated>2021-12-01T00:00:00+00:00</updated><id>https://elifcansuyildiz.github.io/blog/PCA</id><author><name></name></author><category term="PCA" /><category term="Dimension Reduction" /><category term="Sklearn" /><category term="Python" /><summary type="html"><![CDATA[Step-by-step implementation of Principal Component Analysis (PCA) Method.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://elifcansuyildiz.github.io/assets/images-notebook/2021-12-01-PCA.png" /><media:content medium="image" url="https://elifcansuyildiz.github.io/assets/images-notebook/2021-12-01-PCA.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>